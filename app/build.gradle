plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def secretPropertiesFile = rootProject.file("secrets.properties")
def secretsProperties = new Properties()
secretsProperties.load(new FileInputStream(secretPropertiesFile))

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.nytapp"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        buildConfigField("String", "BASE_URL", "\"https://api.nytimes.com/svc/topstories/v2/\"")
        buildConfigField("String", "API_KEY", secretsProperties["API_KEY"])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }
    sourceSets {
        String testShared = 'src/testShared/java'
        test {
            main.java.srcDir testShared
        }
        androidTest {
            main.java.srcDir testShared
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'

    //compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "com.google.accompanist:accompanist-swiperefresh:0.16.0"

    //ViewModel
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'
    androidTestImplementation project(path: ':app')
    kapt 'androidx.lifecycle:lifecycle-compiler:2.1.0'

    //coil
    implementation 'io.coil-kt:coil:1.4.0'
    implementation("com.google.accompanist:accompanist-coil:0.12.0")
    implementation("io.coil-kt:coil-compose:1.4.0")

    //Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.navigation:navigation-compose:2.5.1"

    //Room
    def room_version = "2.4.2"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //Retrofit
    def retrofit_version = "2.9.0"
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-scalars:$retrofit_version")
    implementation("com.squareup.okhttp3:logging-interceptor:4.9.0")
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    //Testing
    testImplementation 'io.mockk:mockk:1.12.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'app.cash.turbine:turbine:0.7.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'androidx.test:core-ktx:1.4.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'

    androidTestImplementation 'app.cash.turbine:turbine:0.9.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
    implementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.room:room-testing:$room_version"

//    testImplementation 'androidx.arch.core:core-testing:2.1.0'
//    testImplementation 'org.hamcrest:hamcrest-all:1.3'
//    testImplementation 'junit:junit:4.13'
//    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.1'
//
//    testImplementation 'org.mockito:mockito-core:2.25.0'
//    testImplementation 'org.mockito:mockito-inline:2.13.0'
//    testImplementation 'com.squareup.okhttp3:mockwebserver:4.4.0'
//    testImplementation 'androidx.test:core-ktx:1.2.0'
//    testImplementation 'androidx.test.ext:junit:1.1.2'
//
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
}